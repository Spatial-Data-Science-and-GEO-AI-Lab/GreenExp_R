% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/green_cover_streets.R
\name{green_cover_streets}
\alias{green_cover_streets}
\title{Green Coverage Street}
\usage{
green_cover_streets(
  city = NULL,
  areabox = NULL,
  buffer_distance = NULL,
  folder_path_land_cover = NULL,
  epsg_code = NULL,
  UID = NULL,
  year = "2021",
  plot_landcover = FALSE
)
}
\arguments{
\item{city}{A city or place name as string to set the bounding are of the city to extract OSM streets}

\item{areabox}{A bounding box to define your analysis area}

\item{buffer_distance}{A distance in meters to create a buffer around each street segment to defined an area within which the green coverage will be assess. Usually smaller values preferred (e.g., 30, 50)}

\item{folder_path_land_cover}{Folder path to where the retrieved land cover should be saved continuously. Must not include a filename extension.}

\item{epsg_code}{Optional; a  epsg code to get a Projected CRS in the final output, If missing, the default is \code{3395}}

\item{UID}{Optional; a  character string representing a unique identifier for each point street segment}

\item{year}{Optional; The year of the satellite images. The years 2020 and 2021 can be used for the time being.}

\item{plot_landcover}{Optional; to plot the land cover, default is \code{FALSE}}
}
\value{
The percentage of each green cover and different vegetation cover type within a given buffer each street.
}
\description{
Green Coverage Street
}
\examples{

GreenStcover <- green_cover_streets ("Centrum, Amsterdam", buffer_distance = 30)

#map green coverage that includes tree, grass, shrubs together
mapview::mapview(GreenStcover, zcol= "greencover")

#map the tree coverage
mapview::mapview(GreenStcover, zcol= "tree_cover")


#plot the result in tmap if mapview does not work!
tmap::tmap_mode("view")
tmap::tm_shape(GreenStcover) + tmap::tm_lines (col = "greencover", palette = "viridis", basemaps = "Esri.WorldTopoMap")


tmap::tm_shape(GreenStcover) + tmap::tm_lines (col = "tree_cover", palette = "viridis", basemaps = "Esri.WorldTopoMap")


}
