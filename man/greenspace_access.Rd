% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/accessibility.R
\name{greenspace_access}
\alias{greenspace_access}
\title{Distance to the nearest green spaces}
\usage{
greenspace_access(
  address_location,
  greenspace = NULL,
  buffer_distance = NULL,
  network_file = NULL,
  epsg_code = NULL,
  folder_path_network = NULL,
  euclidean = TRUE,
  minimum_greenspace_size = 0,
  pseudo_entrance = FALSE,
  entrances_within_buffer = TRUE,
  folder_path_greenspace = NULL,
  speed = NULL,
  time = NULL,
  city = NULL,
  UID = NULL
)
}
\arguments{
\item{address_location}{A \code{\link[sf]{sf}} object representing the location of interest, the location should be in projected coordinates.}

\item{greenspace}{Optional; a \code{\link[sf]{sf}} object (e.g., polygon) representing a greenspace layer, the layer should be in projected coordinates}

\item{buffer_distance}{A distance in meters to create a buffer or isochrone around the address location}

\item{network_file}{Optional; a \code{\link[sfnetworks]{sfnetwork}} object representing a road network, If missing the road network will be created.}

\item{epsg_code}{A espg code to get a Projected CRS in the final output, If missing, the default is \code{3395}}

\item{folder_path_network}{optional; Folder path to where the retrieved network should be saved continuously. Must not include a filename extension (e.g. '.shp', '.gpkg').}

\item{euclidean}{Whether the distance between the fake entry points and the address location is euclidean, or calculated with the network.}

\item{minimum_greenspace_size}{The minimum size of the greenspace in m2.}

\item{pseudo_entrance}{The possibility to calculate the distance to created pseudo entrances. These pseudo entrances are created,
by intersecting a buffer that was created around a greenspace with network points. default is \code{FALSE}}

\item{entrances_within_buffer}{The possibility to get the closest greenspace for every point. default is \code{FALSE}}

\item{folder_path_greenspace}{optional; Folder path to where the retrieved greenspaces should be saved continuously. Must not include a filename extension (e.g. '.shp', '.gpkg').}

\item{speed}{A numeric value representing the speed in km/h to calculate the buffer distance (required if \code{time} is provided)}

\item{time}{A numeric value representing the travel time in minutes to calculate the buffer distance (required if \code{speed} is provided)}

\item{city}{When using a network buffer, you can add a city where your address points are to speed up the process}

\item{UID}{A character string representing a unique identifier for each point of interest}
}
\value{
The distance to the nearest greenspace and whether the greenspace are within the buffer distance that is given
}
\description{
Distance to the nearest green spaces
}
\examples{
#' # Load a dataframe
df <- Ams_Houses[1:10, ]

# Euclidean Distance to Centroid of Green spaces
greenspace_access(address_location = df, buffer_distance=300)

# Network Distance to Centroid of Green spaces
greenspace_access(address_location=df, buffer_distance=300, euclidean = FALSE)

#Network Distance to Pseudo entrance points, and the greenspaces should be at least 400m2
greenspace_access(address_location=df, buffer_distance=300, euclidean=FALSE, pseudo_entrance=TRUE,
  minimum_greenspace_size=400)


}
